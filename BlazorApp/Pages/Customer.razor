@page "/customer"

@using DataAccessLibrary;
@using DataAccessLibrary.Models;
@using DataAccessLibrary.Paging;
@inject ICustomerService objCustomerService

<h2>Customers Information</h2>

@if (objCustomer == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <NavLink class="nav-link" href="AddCustomer">
        <span class="oi oi-plus" aria-hidden="true"></span>Add New Customer
    </NavLink>

    <table class="table">
        <thead>
            <tr>
                <th>Customer Id</th>
                <th>Company Name</th>
                <th>Contact Name</th>
                <th>Address</th>
                <th>City</th>
                <th>Region</th>
                <th>PostalCode</th>
                <th>Country</th>
                <th>Phone</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in objCustomer)
            {
                <tr>
                    <td>@customer.Id</td>
                    <td>@customer.CompanyName</td>
                    <td>@customer.ContactName</td>
                    <td>@customer.Address</td>
                    <td>@customer.City</td>
                    <td>@customer.Region</td>
                    <td>@customer.PostalCode</td>
                    <td>@customer.Country</td>
                    <td>@customer.Phone</td>
                    <td>
                        <a class="nav-link" href="EditCustomer/@customer.Id">
                            <span class="oi oi-pencil" aria-hidden="true"></span>Edit
                        </a>
                        <a class="nav-link" href="DeleteCustomer/@customer.Id">
                            <span class="oi oi-trash" aria-hidden="true"></span>Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>  
    @*<div>*@
        <nav aria-label="...">
            <ul class="pagination">
                <li class="page-item @(pageIndex == 1 ? "disabled" : null)" @onclick="() => GetPagedCustomers(pageIndex != 1 ? pageIndex - 1 : 1)" >   
                    <a class="page-link">Previous</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {                    
                    int anotherIndex = i;                      

                    <li class="page-item @(pageIndex == i ? "active" : null)"  @onclick="() => GetPagedCustomers(anotherIndex)"> 
                        <a class="page-link">@i</a>
                    </li>   
                }
                <li class="page-item @(pageIndex == totalPages ? "disabled" : null)" @onclick="() => GetPagedCustomers(pageIndex != totalPages ? pageIndex + 1 : totalPages)">
                    <a class="page-link">Next</a>
                </li>
            </ul>
        </nav>
   @*</div>*@
}

@code {
    private int pageIndex = 1;   
    private int totalPages;
    private int pageSize = 3;
    List<ApiCustomer> objCustomer;    

    protected override async Task OnInitializedAsync()
    {        
        await GetPagedCustomers(pageIndex);
    }

    public async Task GetPagedCustomers(int pageIndex2)
    {
        var results = await objCustomerService.GetPaginatedCustomers(pageIndex2, pageSize);

        if (results != null)
        {
            objCustomer = results.Items;
            pageIndex = results.PageIndex;
            totalPages = results.TotalPages;
        } 
    }
}
